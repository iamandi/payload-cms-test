export interface NodeTypes {
    paragraph?: string;
    block_quote?: string;
    code_block?: string;
    link?: string;
    ul_list?: string;
    ol_list?: string;
    listItem?: string;
    heading?: {
        1?: string;
        2?: string;
        3?: string;
        4?: string;
        5?: string;
        6?: string;
    };
    emphasis_mark?: string;
    strong_mark?: string;
    delete_mark?: string;
}
export interface OptionType {
    nodeTypes?: NodeTypes;
    linkDestinationKey?: string;
}
export interface MdastNode {
    type?: string;
    ordered?: boolean;
    value?: string;
    text?: string;
    children?: Array<MdastNode>;
    depth?: 1 | 2 | 3 | 4 | 5 | 6;
    url?: string;
    lang?: string;
    position?: any;
    spread?: any;
    checked?: any;
    indent?: any;
}
export declare const defaultNodeTypes: {
    paragraph: string;
    block_quote: string;
    code_block: string;
    link: string;
    ul_list: string;
    ol_list: string;
    listItem: string;
    heading: {
        1: string;
        2: string;
        3: string;
        4: string;
        5: string;
        6: string;
    };
    emphasis_mark: string;
    strong_mark: string;
    delete_mark: string;
};
export default function deserialize(node: MdastNode, opts?: OptionType): {
    type: string;
    children: {
        text: string;
    }[];
    language?: undefined;
    break?: undefined;
} | {
    type: string;
    language: string | undefined;
    children: {
        text: string | undefined;
    }[];
    break?: undefined;
} | {
    break: boolean;
    type: string;
    children: {
        text: string;
    }[];
    language?: undefined;
} | {
    type?: string | undefined;
    ordered?: boolean | undefined;
    value?: string | undefined;
    text: string;
    children?: MdastNode[] | undefined;
    depth?: 1 | 2 | 3 | 4 | 5 | 6 | undefined;
    url?: string | undefined;
    lang?: string | undefined;
    position?: any;
    spread?: any;
    checked?: any;
    indent?: any;
    language?: undefined;
    break?: undefined;
};
