import React, { useEffect } from 'react';
import { useWatchForm } from '../Form/context';
const withCondition = (Field) => {
    const CheckForCondition = (props) => {
        const { admin: { condition, } = {}, } = props;
        if (condition) {
            return React.createElement(WithCondition, Object.assign({}, props));
        }
        return React.createElement(Field, Object.assign({}, props));
    };
    const WithCondition = (props) => {
        const { name, path: pathFromProps, admin: { condition, } = {}, } = props;
        const path = pathFromProps || name;
        const { getData, getSiblingData, getField, dispatchFields } = useWatchForm();
        const data = getData();
        const field = getField(path);
        const siblingData = getSiblingData(path);
        const passesCondition = condition ? condition(data, siblingData) : true;
        const fieldExists = Boolean(field);
        useEffect(() => {
            if (!passesCondition && fieldExists) {
                dispatchFields({ type: 'REMOVE', path });
            }
        }, [dispatchFields, passesCondition, path, fieldExists]);
        if (passesCondition) {
            return React.createElement(Field, Object.assign({}, props));
        }
        return null;
    };
    return CheckForCondition;
};
export default withCondition;
