import React, { Fragment, useState, useEffect } from 'react';
import { useConfig, useAuth } from '@payloadcms/config-provider';
import { useWatchForm } from '../../../../../../Form/context';
import Relationship from '../../../../../Relationship';
import Number from '../../../../../Number';
import Select from '../../../../../Select';
const createOptions = (collections, permissions) => collections.reduce((options, collection) => {
    if (permissions?.collections?.[collection.slug]?.read?.permission && collection?.admin?.enableRichTextRelationship) {
        return [
            ...options,
            {
                label: collection.labels.plural,
                value: collection.slug,
            },
        ];
    }
    return options;
}, []);
const RelationshipFields = () => {
    const { collections, maxDepth } = useConfig();
    const { permissions } = useAuth();
    const [options, setOptions] = useState(() => createOptions(collections, permissions));
    const { getData } = useWatchForm();
    const { relationTo } = getData();
    useEffect(() => {
        setOptions(createOptions(collections, permissions));
    }, [collections, permissions]);
    return (React.createElement(Fragment, null,
        React.createElement(Select, { required: true, label: "Relation To", name: "relationTo", options: options }),
        relationTo && (React.createElement(Relationship, { label: "Related Document", name: "value", relationTo: relationTo, required: true })),
        React.createElement(Number, { required: true, name: "depth", label: "Depth", min: 0, max: maxDepth })));
};
export default RelationshipFields;
