"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const graphql_1 = __importStar(require("graphql"));
const express_graphql_1 = require("express-graphql");
const graphql_query_complexity_1 = __importStar(require("graphql-query-complexity"));
const buildObjectType_1 = __importDefault(require("./schema/buildObjectType"));
const buildMutationInputType_1 = __importDefault(require("./schema/buildMutationInputType"));
const errorHandler_1 = __importDefault(require("./errorHandler"));
const buildBlockType_1 = __importDefault(require("./schema/buildBlockType"));
const buildPoliciesType_1 = __importDefault(require("./schema/buildPoliciesType"));
const buildLocaleInputType_1 = __importDefault(require("./schema/buildLocaleInputType"));
const buildFallbackLocaleInputType_1 = __importDefault(require("./schema/buildFallbackLocaleInputType"));
const init_1 = __importDefault(require("../collections/graphql/init"));
const init_2 = __importDefault(require("../globals/graphql/init"));
const buildWhereInputType_1 = __importDefault(require("./schema/buildWhereInputType"));
class InitializeGraphQL {
    constructor(init) {
        this.Query = { name: 'Query', fields: {} };
        this.Mutation = { name: 'Mutation', fields: {} };
        Object.assign(this, init);
        this.init = this.init.bind(this);
        this.types = {
            blockTypes: {},
            blockInputTypes: {},
        };
        if (this.config.localization) {
            this.types.localeInputType = buildLocaleInputType_1.default(this.config.localization);
            this.types.fallbackLocaleInputType = buildFallbackLocaleInputType_1.default(this.config.localization);
        }
        this.Query = {
            name: 'Query',
            fields: {},
        };
        this.Mutation = {
            name: 'Mutation',
            fields: {},
        };
        this.buildBlockType = buildBlockType_1.default.bind(this);
        this.buildMutationInputType = buildMutationInputType_1.default.bind(this);
        this.buildWhereInputType = buildWhereInputType_1.default;
        this.buildObjectType = buildObjectType_1.default.bind(this);
        this.buildPoliciesType = buildPoliciesType_1.default.bind(this);
        this.initCollections = init_1.default.bind(this);
        this.initGlobals = init_2.default.bind(this);
        this.initCollections();
        this.initGlobals();
        this.Query.fields.Access = {
            type: this.buildPoliciesType(),
            resolve: this.graphQL.resolvers.collections.auth.access,
        };
        if (typeof this.config.graphQL.queries === 'function') {
            const customQueries = this.config.graphQL.queries(graphql_1.default, this);
            this.Query = {
                ...this.Query,
                fields: {
                    ...this.Query.fields,
                    ...(customQueries || {}),
                },
            };
        }
        if (typeof this.config.graphQL.mutations === 'function') {
            const customMutations = this.config.graphQL.mutations(graphql_1.default, this);
            this.Mutation = {
                ...this.Mutation,
                fields: {
                    ...this.Mutation.fields,
                    ...(customMutations || {}),
                },
            };
        }
        const query = new graphql_1.GraphQLObjectType(this.Query);
        const mutation = new graphql_1.GraphQLObjectType(this.Mutation);
        const schema = {
            query,
            mutation,
        };
        this.schema = new graphql_1.GraphQLSchema(schema);
        this.extensions = async (info) => {
            const { result } = info;
            if (result.errors) {
                const afterErrorHook = typeof this.config.hooks.afterError === 'function' ? this.config.hooks.afterError : null;
                [this.errorResponse] = await errorHandler_1.default(info, this.config.debug, afterErrorHook);
            }
            return null;
        };
        this.customFormatErrorFn = () => (this.errorResponse);
        this.validationRules = (variables) => ([
            graphql_query_complexity_1.default({
                estimators: [
                    graphql_query_complexity_1.fieldExtensionsEstimator(),
                    graphql_query_complexity_1.simpleEstimator({ defaultComplexity: 1 }),
                ],
                maximumComplexity: this.config.graphQL.maxComplexity,
                variables,
            }),
        ]);
    }
    init(req, res) {
        this.errorResponse = null;
        return express_graphql_1.graphqlHTTP(async (request, response, { variables }) => ({
            schema: this.schema,
            customFormatErrorFn: this.customFormatErrorFn,
            extensions: this.extensions,
            context: { req, res },
            validationRules: this.validationRules(variables),
        }));
    }
}
exports.default = InitializeGraphQL;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ3JhcGhxbC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxtREFBb0U7QUFDcEUscURBQThDO0FBQzlDLHFGQUFzRztBQUN0RywrRUFBdUQ7QUFDdkQsNkZBQXFFO0FBQ3JFLGtFQUEwQztBQUMxQyw2RUFBcUQ7QUFDckQsbUZBQTJEO0FBQzNELHlGQUFpRTtBQUNqRSx5R0FBaUY7QUFDakYsdUVBQTBEO0FBQzFELG1FQUFrRDtBQUVsRCx1RkFBK0Q7QUFVL0QsTUFBTSxpQkFBaUI7SUFxQ3JCLFlBQVksSUFBSTtRQTVCaEIsVUFBSyxHQUFxRCxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUUsRUFBRSxDQUFDO1FBRXhGLGFBQVEsR0FBcUQsRUFBRSxJQUFJLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxFQUFFLEVBQUUsQ0FBQztRQTJCNUYsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDMUIsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVqQyxJQUFJLENBQUMsS0FBSyxHQUFHO1lBQ1gsVUFBVSxFQUFFLEVBQUU7WUFDZCxlQUFlLEVBQUUsRUFBRTtTQUNKLENBQUM7UUFFbEIsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRTtZQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLGVBQWUsR0FBRyw4QkFBb0IsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDO1lBQzVFLElBQUksQ0FBQyxLQUFLLENBQUMsdUJBQXVCLEdBQUcsc0NBQTRCLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUMsQ0FBQztTQUM3RjtRQUVELElBQUksQ0FB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