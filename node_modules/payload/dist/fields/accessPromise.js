"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const relationshipPopulationPromise_1 = __importDefault(require("./relationshipPopulationPromise"));
const accessPromise = async ({ data, originalDoc, field, operation, overrideAccess, req, id, relationshipPopulations, depth, currentDepth, hook, payload, }) => {
    const resultingData = data;
    let accessOperation;
    if (hook === 'afterRead') {
        accessOperation = 'read';
    }
    else if (hook === 'beforeValidate') {
        if (operation === 'update')
            accessOperation = 'update';
        if (operation === 'create')
            accessOperation = 'create';
    }
    if (field.access && field.access[accessOperation]) {
        const result = overrideAccess ? true : await field.access[accessOperation]({ req, id });
        if (!result && accessOperation === 'update' && originalDoc[field.name] !== undefined) {
            resultingData[field.name] = originalDoc[field.name];
        }
        else if (!result) {
            delete resultingData[field.name];
        }
    }
    if ((field.type === 'relationship' || field.type === 'upload') && hook === 'afterRead') {
        relationshipPopulations.push(relationshipPopulationPromise_1.default({
            data,
            field,
            depth,
            currentDepth,
            req,
            overrideAccess,
            payload,
        }));
    }
};
exports.default = accessPromise;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjZXNzUHJvbWlzZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9maWVsZHMvYWNjZXNzUHJvbWlzZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLG9HQUE0RTtBQW1CNUUsTUFBTSxhQUFhLEdBQUcsS0FBSyxFQUFFLEVBQzNCLElBQUksRUFDSixXQUFXLEVBQ1gsS0FBSyxFQUNMLFNBQVMsRUFDVCxjQUFjLEVBQ2QsR0FBRyxFQUNILEVBQUUsRUFDRix1QkFBdUIsRUFDdkIsS0FBSyxFQUNMLFlBQVksRUFDWixJQUFJLEVBQ0osT0FBTyxHQUNHLEVBQWlCLEVBQUU7SUFDN0IsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDO0lBRTNCLElBQUksZUFBZSxDQUFDO0lBRXBCLElBQUksSUFBSSxLQUFLLFdBQVcsRUFBRTtRQUN4QixlQUFlLEdBQUcsTUFBTSxDQUFDO0tBQzFCO1NBQU0sSUFBSSxJQUFJLEtBQUssZ0JBQWdCLEVBQUU7UUFDcEMsSUFBSSxTQUFTLEtBQUssUUFBUTtZQUFFLGVBQWUsR0FBRyxRQUFRLENBQUM7UUFDdkQsSUFBSSxTQUFTLEtBQUssUUFBUTtZQUFFLGVBQWUsR0FBRyxRQUFRLENBQUM7S0FDeEQ7SUFFRCxJQUFJLEtBQUssQ0FBQyxNQUFNLElBQUksS0FBSyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsRUFBRTtRQUNqRCxNQUFNLE1BQU0sR0FBRyxjQUFjLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsTUFBTSxLQUFLLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEVBQUUsR0FBRyxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFeEYsSUFBSSxDQUFDLE1BQU0sSUFBSSxlQUFlLEtBQUssUUFBUSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEtBQUssU0FBUyxFQUFFO1lBQ3BGLGFBQWEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsV0FBVyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNyRDthQUFNLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDbEIsT0FBTyxhQUFhLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ2xDO0tBQ0Y7SUFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxjQUFjLElBQUksS0FBSyxDQUFDLElBQUksS0FBSyxRQUFRLENBQUMsSUFBSSxJQUFJLEtBQUssV0FBVyxFQUFFO1FBQ3RGLHVCQUF1QixDQUFDLElBQUksQ0FBQyx1Q0FBNkIsQ0FBQztZQUN6RCxJQUFJO1lBQ0osS0FBSztZQUNMLEtBQUs7WUFDTCxZQUFZO1lBQ1osR0FBRztZQUNILGNBQWM7WUFDZCxPQUFPO1NBQ1IsQ0FBQyxDQUFDLENBQUM7S0FDTDtBQUNILENBQUMsQ0FBQztBQUVGLGtCQUFlLGFBQWEsQ0FBQyJ9